#  Copyright 2015 VMware, Inc.  All rights reserved.
#  SPDX-License-Identifier: Apache-2.0 OR GPL-3.0-only
---
- name: create DNS template
  template:
    src: network_dns_settings_request_body.xml
    dest: "{{ dns_request_body_file }}"
- name: create Server template
  template:
    src: network_server_settings_request_body.xml
    dest: "{{server_request_body_file }}"
- name: create static v4 static  v6 template
  template:
    src: network_staticv4staticv6_request_body.xml
    dest: "{{ network_request_body_file }}"
  when:  vra_address_version== 'STATICV4+STATICV6'

- name: create static v4 Auto V6 template
  template:
    src: network_staticv4autov6_request_body.xml
    dest: "{{ network_request_body_file }}"
  when:  vra_address_version== 'STATICV4+AUTOV6'

- name: create DHCPv4 Autov6 template
  template:
    src: network_dhcpv4autov6_request_body.xml
    dest: "{{ network_request_body_file }}"
  when:  vra_address_version== 'DHCPV4+AUTOV6'

- name: create DHCPv4 static v6 template
  template:
    src: network_dhcpv4staticv6_request_body.xml
    dest: "{{ network_request_body_file }}"
  when:  vra_address_version== 'DHCPV4+STATICV6'

- name: create AUTO v6 template
  template:
    src: network_autov6_request_body.xml
    dest: "{{ network_request_body_file }}"
  when:  vra_address_version== 'AUTOV6'

- name: create static v6  template
  template:
    src: network_staticv6_request_body.xml
    dest: "{{ network_request_body_file }}"
  when:  vra_address_version== 'STATICV6'

- name: Notice -- Waiting on vRBusiness API availability.
  wait_for: host="{{ vra_host_name }}" port=5480 delay=30 timeout=3600

# TODO: this really is a 'timed delay' and should actually check the DB port.
- name: Notice -- Waiting briefly for databases to settle.
  wait_for: host="{{vra_host_name}}" port=5480 delay=30 timeout=600

- name: Register with vra and send the dns changes
  uri:
    url: https://{{ vra_host_name}}:5480/cimom
    method: POST
    force_basic_auth: yes
    follow_redirects: all
    user: "{{ vra_user }}"
    password: "{{ vra_root_password }}"
    HEADER_Content-Type: "application/xml"
    body:  "{{ lookup('file',dns_request_body_file) }}"
    validate_certs: no
    timeout: 120
    status_code: 200
  register: register_dns

- debug: msg="{{ register_dns }}"

# TODO: this really is a 'timed delay' and should actually check the DB port.
- name: Notice -- Waiting briefly for databases to settle.
  wait_for: host="{{vra_host_name}}" port=5480 delay=30 timeout=600

- name: Register with vra and send the server  changes
  uri:
    url: https://{{ vra_host_name}}:5480/cimom
    method: POST
    force_basic_auth: yes
    follow_redirects: all
    user: "{{ vra_user }}"
    password: "{{ vra_root_password }}"
    HEADER_Content-Type: "application/xml"
    body:  "{{ lookup('file',server_request_body_file) }}"
    validate_certs: no
    timeout: 120
    status_code: 200
  register: register_server

- debug: msg="{{ register_server }}"

# TODO: this really is a 'timed delay' and should actually check the DB port.
- name: Notice -- Waiting briefly for databases to settle.
  wait_for: host="{{vra_host_name}}" port=5480 delay=30 timeout=600

- name: Register with vra and send the ip address  changes
  uri:
    url: https://{{ vra_host_name}}:5480/cimom
    method: POST
    force_basic_auth: yes
    follow_redirects: all
    user: "{{ vra_user }}"
    password: "{{ vra_root_password }}"
    HEADER_Content-Type: "application/xml"
    body:  "{{ lookup('file',network_request_body_file) }}"
    validate_certs: no
    timeout: 120
    status_code: 200
  register: register_ip

- debug: msg="{{ register_ip }}"

# TODO: this really is a 'timed delay' and should actually check the DB port.
- name: Notice -- Waiting briefly for databases to settle.
  wait_for: host="{{vra_host_name}}" port=5480 delay=30 timeout=600

