#  Copyright 2015 VMware, Inc.  All rights reserved.
#  SPDX-License-Identifier: Apache-2.0 OR GPL-3.0-only
---
- name: create tenant request
  template:
    src: tenant_request_body.json
    dest: "{{ tenant_request_body_file }}"

- name: create token request
  template:
    src: token_request_body.json
    dest: "{{ token_request_body_file }}"

- name: debug token body
  debug: msg="{{ lookup('file',token_request_body_file) }}"

- name: debug tenant body
  debug: msg="{{ lookup('file',tenant_request_body_file) }}"

#- name: Notice -- Waiting on vRA API availability.
#  wait_for: host="{{ vra_host_name }}" port=443 delay=30 timeout=3600

# TODO: this really is a 'timed delay' and should actually check the DB port.
#- name: Notice -- Waiting briefly for databases to settle.
#  wait_for: host="{{vra_host_name}}" port=443 delay=30 timeout=600

- set_fact:
     authorization1: "{{vra_sso_user}}:{{vra_sso_password}}"

- name: Get Token
  uri:
    url: https://{{ vra_host_name}}/identity/api/tokens
    method: POST
    HEADER_Content-Type: "application/json"
    HEADER_Accept: "application/json"
    body: "{{ lookup('file',token_request_body_file)}}"
    validate_certs: no
  register: register_result

- set_fact:
     authorization: "Bearer {{ register_result.json['id']}}"

- debug: msg="{{authorization1}}"

- name: Register with vra and send the tenant request
  uri:
    url: https://{{ vra_host_name}}/identity/api/tenants//{{vra_tenant_url}}
    method: POST
    force_basic_auth: yes
    follow_redirects: all
    HEADER_Accept: "text/xml"
    HEADER_Authorization: "{{authorization}}"
    user: "{{ vra_sso_user }}"
    password: "{{ vra_sso_password }}"
    body:  "{{ lookup('file',tenant_request_body_file) }}"
    validate_certs: no
    timeout: 120
    status_code: 200
  register: register_result

- debug: msg="{{ register_result }}"
